{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Programaci\u00f3n, Inteligencia Artificial y Rob\u00f3tica I","text":"<p>Estos apuntes desarrollan los recursos did\u00e1cticos de la asignatura Programaci\u00f3n, Inteligencia Artificial y Rob\u00f3tica I (PIAR I), de 2\u00ba ESO, cumpliendo los saberes b\u00e1sicos establecidos en el Decreto 107/2022, del 5 de agosto.</p>"},{"location":"index.html#que-voy-a-aprender","title":"\u00bfQu\u00e9 voy a aprender?","text":"<p>Esta asignatura contiene parte de la formaci\u00f3n necesaria para desarrolla competencias tecnol\u00f3gicas y digitales b\u00e1sicas ligadas a la computaci\u00f3n y la ingenier\u00eda </p> <p>En concreto, incluye aspectos como:</p> <ul> <li>Pensamiento computacional como base para resolver problemas de forma l\u00f3gica y estructurada.</li> <li>Programaci\u00f3n para crear soluciones digitales y tecnol\u00f3gicas.</li> <li>Inteligencia Artificial: comprensi\u00f3n b\u00e1sica de su funcionamiento y aplicaciones.</li> </ul>"},{"location":"index.html#competencias-especificas","title":"Competencias espec\u00edficas","text":"<p>Una competencias espec\u00edficas (C.ESP): \"es una declaraci\u00f3n de lo que el estudiante se espera que conozca, comprenda y sea capaz de hacer al finalizar un periodo de aprendizaje\".</p> <p>Para saber el grado de desarrollo competencial alcanzado por el alumno en cada competencias espec\u00edficas, nos apoyamos en los  criterios de evaluaci\u00f3n (CE) que miden el aprendizaje del alumnado ha alcanzado.</p> <p>Las competencias espec\u00edficas (C.ESP) y criterios de evaluaci\u00f3n de PIAR I son:</p> Competencia espec\u00edfica (C.ESP) Criterios de evaluaci\u00f3n (CE) Peso % C.ESP1: Identificar, investigar y emplear t\u00e9cnicas de inteligencia artificial y virtualizaci\u00f3n de la realidad en el abordaje y la b\u00fasqueda de soluciones a problemas b\u00e1sicos de la sociedad valorando los principios \u00e9ticos e inclusivos aplicados. CE1.1: Identificar el funcionamiento de t\u00e9cnicas de IA.  CE1.2: Investigar situaciones donde se aplican t\u00e9cnicas de IA.  CE1.3: Valorar criterios \u00e9ticos aplicados a las funciones de IA.  CE1.4: Emplear funciones de IA en aplicaciones sencillas siguiendo criterios \u00e9ticos e inclusivos para buscar soluciones a problemas b\u00e1sicos.  CE1.5: Emplear t\u00e9cnicas sencillas de virtualizaci\u00f3n de la realidad. 10%  15%  25% 20% - C.ESP2: Aplicar el pensamiento computacional en el an\u00e1lisis y resoluci\u00f3n de problemas b\u00e1sicos significativos para el alumnado mediante el desarrollo de software. CE2.1: Analizar problemas b\u00e1sicos significativos para el alumnado, mediante el uso de las estructuras de control m\u00e1s adecuadas.  CE2.2: Evaluar y mantener las aplicaciones inform\u00e1ticas desarrolladas por el propio alumnado.  CE2.3: Planificar de forma aut\u00f3noma la soluci\u00f3n de problemas b\u00e1sicos, utilizando los algoritmos y las estructuras de datos m\u00e1s adecuados.  CE2.4: Programar aplicaciones sencillas multiplataforma de manera aut\u00f3noma para resolver problemas b\u00e1sicos.  CE2.5: Aplicar y respetar los derechos de autor\u00eda, licencias de derechos y explotaci\u00f3n durante la creaci\u00f3n de software. 35%  -  -  35%  35%  15% C.ESP3: Montar sistemas rob\u00f3ticos sencillos, analizando las respuestas que proporcionan en su interacci\u00f3n con el entorno y valorando la eficacia de estas frente a los retos sencillos. CE3.1: Montar robots de mayor complejidad empleando sensores, actuadores y otros operadores.  CE3.2: Conectar, transferir y validar la ejecuci\u00f3n del programa de control seleccionado al robot.  CE3.3: Seleccionar los m\u00f3dulos de entrada y salida para montar robots sencillos, que sean capaces de realizar tareas aut\u00f3nomas.  CE3.4: Analizar y evaluar la eficacia de la interacci\u00f3n del robot con el entorno.  CE3.5: Programar instrucciones sencillas multiplataforma de manera aut\u00f3noma para controlar un robot programable.  CE3.6: Controlar el robot por parte del usuario en tiempo real y de forma remota. 2.5%  2.5%  15%  -  15%  - C.ESP4: Afrontar retos tecnol\u00f3gicos sencillos y proponer soluciones mediante la programaci\u00f3n, la Inteligencia artificial y la rob\u00f3tica analizando las posibilidades y valorando cr\u00edticamente las implicaciones \u00e9ticas y ecosociales. CE4.1: Planificar tareas sencillas, crear estructuras de equipos de trabajo, distribuir funciones y responsabilidades de las personas integrantes y colaborar proactivamente en el desarrollo de soluciones digitales y tecnol\u00f3gicas.  CE4.2: Valorar la importancia de la Inteligencia Artificial, la programaci\u00f3n y la rob\u00f3tica como elementos disruptores de la transformaci\u00f3n social, cultural y cient\u00edfica actuales.  CE4.3: Dise\u00f1ar soluciones utilizando la programaci\u00f3n, la Inteligencia artificial y la rob\u00f3tica eligiendo la opci\u00f3n que mejor se adapte a los retos planteados.  CE4.4: Gestionar situaciones de incertidumbre en entornos digitales y tecnol\u00f3gicos con una actitud positiva, y afrontarlas utilizando el conocimiento adquirido y sinti\u00e9ndose competente.  CE4.5: Aplicar la sostenibilidad e inclusi\u00f3n como requisitos del dise\u00f1o de soluciones tecnol\u00f3gicas. 6%  3%  30%  3%  3%"},{"location":"index.html#planificacion-unidades-didacticas","title":"Planificaci\u00f3n unidades did\u00e1cticas","text":"<p>La temporalizaci\u00f3n de las UD de PIAR I se organiza de la siguiente forma:</p>"},{"location":"index.html#primera-evaluacion","title":"Primera evaluaci\u00f3n","text":"Unidad did\u00e1ctica T\u00edtulo Sesiones/Horas 1 Pensamiento computacional 10 2 Programaci\u00f3n con Scratch I 13"},{"location":"index.html#segunda-evaluacion","title":"Segunda evaluaci\u00f3n","text":"Unidad did\u00e1ctica T\u00edtulo Sesiones/Horas 3 Programaci\u00f3n con Scratch II 7 4 Inteligencia Artificial I 9"},{"location":"index.html#tercera-evaluacion","title":"Tercera evaluaci\u00f3n","text":"Unidad did\u00e1ctica T\u00edtulo Sesiones 5 Inteligencia Artificial II 6 6 Introducci\u00f3n al dise\u00f1o 3D 6 7 Rob\u00f3tica I 6 <p>Si nos centramos en la temporalizaci\u00f3n, hemos agrupado los unidades en diferentes bloques repartidos a lo largo del curso del siguiente modo:</p> <pre><code>   %%{init: { 'logLevel': 'debug', 'theme': 'base', 'timeline': {'disableMulticolor': true}}}%%\n    timeline\n        title Planificaci\u00f3n temporal\n        section 1\u00aa Evaluaci\u00f3n\n            Programaci\u00f3n : 1.- Pensamiento computacional :  2.- Programaci\u00f3n con Scratch I\n        section 2\u00aa Evaluaci\u00f3n\n            Programaci\u00f3n: 3.- Programaci\u00f3n con Scratch II \n            Inteligencia Artificial:  4. - Inteligencia Artificial I\n        section 3\u00aa Evaluaci\u00f3n\n            Inteligencia Artificial:  5. - Inteligencia Artificial II\n            Rob\u00f3tica: 6. - Introducci\u00f3n al dise\u00f1o 3D : 7. - Rob\u00f3tica I</code></pre>"},{"location":"about.html","title":"About me \u2764\ufe0f\u200d\ud83d\udd25","text":"<p>Mi nombre es Patricia Mart\u00ed, soy Ingeniera en Inform\u00e1tica. Durante casi una d\u00e9cada me dediqu\u00e9 al desarrollo software de manera profesional en diferentes empresas nacionales e internacionales. </p> <p>Actualmente, soy docente en el campo de la programaci\u00f3n, donde puedo compartir con entusiasmo y pasi\u00f3n los conocimientos y habilidades aprendidas durante mi trayectoria. </p> <p>Mi objetivo es inspirar a la pr\u00f3xima generaci\u00f3n de desarrolladores y ayudarles a adentrarse en el emocionante mundo de la programaci\u00f3n y la tecnolog\u00eda.</p> <p>Para cualquier consulta o mejora, pueden escribirme a trav\u00e9s de mi correo electr\u00f3nico p.marti2@edu.gva.es.</p>"},{"location":"01_Intro/3_PensamientoCompuacional.html","title":"Pensamiento computacional","text":""},{"location":"01_Intro/3_PensamientoCompuacional.html#como-resuelven-los-problemas-los-ordenadores","title":"\u00bfC\u00f3mo resuelven los problemas los ordenadores?","text":"<ul> <li>\u00bfAlguna vez te has preguntado c\u00f3mo resuelven los problemas los ordenadores o c\u00f3mo funcionan las aplicaciones que usas cada d\u00eda?</li> <li>En esta unidad aprenderemos a reconocer problemas cotidianos, dise\u00f1ar algoritmos que los resuelvan y codificarlos en lenguajes de programaci\u00f3n sencillos, como Scratch, para poder comprobar c\u00f3mo funcionan en la pr\u00e1ctica. Adem\u00e1s, conoceremos la diferencia entre software libre y software propietario, y c\u00f3mo analizar y validar programas de forma segura.</li> </ul>"},{"location":"01_Intro/3_PensamientoCompuacional.html#pensamiento-computacional","title":"Pensamiento computacional","text":"<p>En ocasiones, trabajar como lo har\u00eda un ordenador nos puede ayudar a resolver problemas de la vida diaria y desarrollar soluciones sencillas y creativas para problemas habituales.</p> <p>Esta forma de trabajo se denomina pensamiento computacional y consiste en abordar los problemas planteados como si fu\u00e9ramos cient\u00edficos inform\u00e1ticos:</p> Pensamiento computacional"},{"location":"01_Intro/3_PensamientoCompuacional.html#algoritmos","title":"Algoritmos","text":"<p>A lo largo de la historia, la humanidad se ha encontrado con problemas a los que ha tenido que dar una respuesta para continuar con su evoluci\u00f3n.</p> <p>En la antig\u00fcedad, los primeros matem\u00e1ticos y fil\u00f3sofos utilizaron distintos algoritmos para hallar la soluci\u00f3n a los problemas planteados (algoritmos de sumas y restas, c\u00e1lculos de distancias astron\u00f3micas, c\u00e1lculos de magnitudes f\u00edsicas, etc.).</p> <p>Un algoritmo es una secuencia ordenada de pasos que resuelven un problema en un tiempo finito.</p> <p>Los algoritmos tienen las siguientes caracter\u00edsticas:</p> <ul> <li>Contienen instrucciones concretas, sin ninguna ambig\u00fcedad.</li> <li>Deben terminar, es decir, son finitos.</li> <li>Todos sus pasos son simples y est\u00e1n ordenados.</li> </ul> <p>Los algoritmos, una vez definidos, se escriben en pseudoc\u00f3digo. El pseudoc\u00f3digo, o \u00abc\u00f3digo falso\u00bb, es un lenguaje hecho para que lo entiendan los humanos y no las m\u00e1quinas, por lo que no puede ejecutarse en un ordenador. La finalidad del pseudoc\u00f3digo es ayudarnos a detectar errores en los algoritmos y a depurarlos.</p> <p>Actualmente, todos los algoritmos desarrollados pueden resolverse con la ayuda de los ordenadores y los lenguajes de programaci\u00f3n.</p> <p>Un programa es la traducci\u00f3n de un algoritmo a un lenguaje de programaci\u00f3n capaz de ser entendido por un ordenador y procesado por \u00e9l.</p> Programa Actividad Actividad Profundizaci\u00f3n Actividad Profundizaci\u00f3n"},{"location":"01_Intro/3_PensamientoCompuacional.html#aa11-pensando-como-los-ordenadores","title":"\ud83d\udcdd AA1.1 Pensando como los ordenadores","text":"<p>(C.ESP2 / CE2.1 / IC1-3p)</p> <ol> <li>Define los siguientes conceptos: Programa inform\u00e1tico, lenguaje de programaci\u00f3n, algoritmo.</li> <li>Piensa y anota el nombre de cinco objetos que t\u00fa creas que funcionan mediante un programa.</li> <li>Escribe un algoritmo con los pasos para calentar un vaso de leche con cacao en el microondas.</li> <li>Escribe un algoritmo con los pasos para hacer un bocadillo de queso.</li> </ol>"},{"location":"01_Intro/3_PensamientoCompuacional.html#aap12-resolucion-de-problemas-infografia-con-canva","title":"\ud83d\udca1AAP1.2 Resoluci\u00f3n de problemas. Infograf\u00eda con Canva","text":"<p>(C.ESP2 / CE2.1 / IC2-10p PAG 22-23 )</p> <p>La resoluci\u00f3n de problemas es un proceso c\u00edclico: los pasos para resolverlos se repiten una y otra vez hasta encontrar la soluci\u00f3n id\u00f3nea.</p> <p>Utilizando el pensamiento computacional, \u00bfqu\u00e9 debes hacer para resolver un problema?</p> <p> </p> <p>En esta pr\u00e1ctica vamos a crear una infograf\u00eda en la que mostraremos los pasos para crear un bocadillo de queso. Utilizaremos Canva / PowerPoint o cualquier aplicaci\u00f3n que conozcas para elaborar murales e infograf\u00edas, de uso libre.</p> <p>A continuaci\u00f3n, encontrar\u00e1s un ejemplo de c\u00f3mo realizar una infograf\u00eda con los pasos para resolver un problema. Bas\u00e1ndote en el ejemplo debes de hacer una infograf\u00eda con los pasos para hacer un bocadillo de queso.</p> <ol> <li>Entra en www.canva.com o usa plantillas temporales de power point. La primera vez que accedas a esta p\u00e1gina, la aplicaci\u00f3n te pedir\u00e1 que te registres. Puedes hacerlo con tu cuenta educativa de correo. Si prefieres usar PowerPoint u otra aplicaci\u00f3n que conozcas adelante.</li> <li>Una vez que has accedido, observa que aparecen distintos dise\u00f1os con los que crear tarjetas, p\u00f3steres, presentaciones, etc. (figura 1). Haz clic en la opci\u00f3n Infograf\u00eda.  Figura 1 </li> <li>Entre las plantillas que aparecen, escoge la que se llama Infograf\u00eda proceso dibujo a mano amarillo gris y negro u otra que te guste (figura 2).  Figura 2 </li> <li>Haz doble clic en el t\u00edtulo de la infograf\u00eda, \u201cInfograf\u00eda de procesos\u201d, para modificarlo, y escribe en su lugar \u201cPasos para resolver problemas\u201d.</li> <li>Ahora, en cada uno de los globos de color amarillo, haz doble clic para poder modificar su contenido. Escribe en ellos las cuatro fases para resolver un problema que hemos visto antes.  Figura 3 </li> <li>En los globos blancos puedes incluir alguna informaci\u00f3n de inter\u00e9s relacionada con cada una de las fases de la resoluci\u00f3n de problemas. No a\u00f1adas textos muy largos, las infograf\u00edas tienen que ser muy visuales.</li> <li>Elimina el resto de los textos que aparecen en la plantilla y que no resulten de inter\u00e9s. Para eliminar un texto, haz clic sobre \u00e9l, comprueba que se selecciona la caja del texto y despu\u00e9s haz clic con el bot\u00f3n derecho sobre la caja del texto y pulsa Eliminar (figura 3).</li> <li>Elimina tambi\u00e9n todos los dibujos o fotos que no quieras que aparezcan en la infograf\u00eda. Sigue para ello las indicaciones del paso anterior.</li> <li>Selecciona ahora un globo blanco haciendo clic sobre \u00e9l. Ver\u00e1s que aparece una barra de herramientas en la parte superior para modificar el formato del texto (figura 4). Ponle como tama\u00f1o de letra 25 para que se vea mejor. Luego haz esto mismo en los dem\u00e1s globos blancos. Puedes modificar de la misma forma el color de los textos y el tipo de letra, si te parece que quedar\u00e1 todo mejor.  Figura 4 </li> <li>En la barra de herramientas lateral de la aplicaci\u00f3n, haz clic en M\u00e1s y selecciona Fotos. Aqu\u00ed puedes buscar fotos para tu infograf\u00eda. Escribe \u201csoluci\u00f3n\u201d en el buscador del men\u00fa Fotos (figura 5) y ver\u00e1s que el programa te ofrece muchas im\u00e1genes relacionadas. Escoge una que te guste y haz clic en ella. Comprueba que la imagen se sit\u00faa sobre tu infograf\u00eda.  Figura 5 </li> <li>Pincha la imagen y arr\u00e1strala para colocarla en la parte final de la infograf\u00eda. Puedes ajustar su tama\u00f1o haciendo clic en los c\u00edrculos de las esquinas y arrastrando, para hacerla m\u00e1s grande o m\u00e1s peque\u00f1a, seg\u00fan necesites.</li> <li>Tu infograf\u00eda deber\u00e1 quedar parecida a la de la figura 6.  Figura 6 </li> <li>Una vez terminada, ve a la barra de herramientas superior y haz clic en Descargar para bajarte la infograf\u00eda en PDF a tu ordenador. Selecciona la opci\u00f3n Descarga un borrador gratis con marca de agua.</li> <li>Accede al borrador descargado, haz clic sobre \u00e9l con el bot\u00f3n derecho y cambia su nombre por AAP1.2_nombreapellido. Guarda el documento en tu carpeta de pr\u00e1cticas.</li> </ol> <p>Bas\u00e1ndote en el ejemplo debes de hacer una infograf\u00eda con los pasos para hacer un bocadillo de queso.</p>"},{"location":"01_Intro/3_PensamientoCompuacional.html#aap12b-infografia-con-canva-cartel","title":"\ud83d\udca1AAP1.2b  Infograf\u00eda con Canva. Cartel","text":"<p>(C.ESP2 / CE2.1 / IC2-10p PAG 22-23 )</p> <p>Crea con Canva un cartel en tama\u00f1o A4 para la clase de Programaci\u00f3n, Inteligencia &gt;Artificial y Rob\u00f3tica. Puedes ponerle un fondo de color y usar letras vistosas para el &gt;nombre de la asignatura. Adorna el cartel con im\u00e1genes relacionadas con la asignatura. </p> <p>Luego desc\u00e1rgatelo y gu\u00e1rdalo con el nombre AAP1.2bnombreapellido.pdf.</p>"},{"location":"01_Intro/4_RepAlgoritmos.html","title":"Pensamiento computacional","text":""},{"location":"01_Intro/4_RepAlgoritmos.html#algoritmos-representacion-grafica","title":"Algoritmos. Representaci\u00f3n gr\u00e1fica","text":"<p>Los esquemas y los gr\u00e1ficos nos permiten obtener una idea general de lo que estamos tratando.</p> <p>As\u00ed, hacemos esquemas de las ideas principales de un tema o utilizamos se\u00f1ales gr\u00e1ficas, como las se\u00f1ales de tr\u00e1fico, porque nos muestran de forma clara indicaciones sin necesidad de leer grandes textos.</p> <p>Los algoritmos seguidos para resolver problemas tambi\u00e9n pueden representarse gr\u00e1ficamente. As\u00ed nos proporcionan una visi\u00f3n general de los pasos que hay que seguir.</p> <p>El gr\u00e1fico utilizado para representar un algoritmo se denomina diagrama de flujo u organigrama, y muestra mediante s\u00edmbolos unidos por flechas la secuencia de las acciones que se han de realizar.</p> <p>Los s\u00edmbolos utilizados en los diagramas de flujo son los siguientes:</p> Terminal Actividad"},{"location":"01_Intro/4_RepAlgoritmos.html#aa13-diagrama-de-flujo","title":"\ud83d\udcdd AA1.3 Diagrama de flujo","text":"<p>(C.ESP2 / CE2.1 / IC1-3p)</p> <ol> <li>\u00bfQu\u00e9 es un diagrama de flujo y para qu\u00e9 sirve?</li> <li> <p>Realiza el diagrama de flujo correspondiente al algoritmo con los pasos a seguir para calentar un vaso de leche con cacao en el microondas.</p> <ul> <li>Para ello, utiliza la siguiente aplicaci\u00f3n web: diagrams</li> <li>Al iniciar el programa pulsa en \"Decidir m\u00e1s tarde\", para no tener que registrarte.</li> </ul> </li> </ol>"},{"location":"01_Intro/4_RepAlgoritmos.html#el-bloque-decision","title":"El bloque Decisi\u00f3n","text":"<p>Hay veces en las que tenemos que tomar decisiones a lo largo del diagrama, para eso tenemos que utilizar el bloque de Decisi\u00f3n.</p> Bloque de decisi\u00f3n <p>En el caso del ejemplo del vaso de leche con cacao, podr\u00edamos modificar el final del algoritmo para incluir un bloque de decisi\u00f3n que nos permita decidir si hay suficiente cacao en el vaso o no.</p> <p>Cuando realizamos un algoritmo, tenemos que tener cuidado de no cometer errores pensando muy bien lo que se hace en cada uno de los bloques o pasos.</p> <p>Ejemplo: Hemos tenido que separar el bloque \"Echamos leche y cacao en el vaso\" por dos bloques, \"Echamos leche en el vaso\" y \"Echamos cacao en el vaso\", ya que si no hubiese suficiente cacao, a\u00f1adir\u00edamos m\u00e1s leche, pudiendo llegar a derramarse la leche.</p> Ejemplo vaso de leche Actividad"},{"location":"01_Intro/4_RepAlgoritmos.html#aa14-diagrama-de-flujo","title":"\ud83d\udcddAA1.4 Diagrama de flujo","text":"<p>(C.ESP2 / CE2.1 / IC1-3p)</p> <ol> <li> <p>Modifica el diagrama de flujo correspondiente al algoritmo  con los pasos a seguir para calentar un vaso de leche con cacao en el microondas e incluye un bloque de decisi\u00f3n que nos pregunte si quieres azucar o no.</p> </li> <li> <p>Realiza el diagrama de flujo correspondiente al algoritmo con los pasos a seguir para lavarse los dientes.</p> <ul> <li>Para ello, utiliza la siguiente aplicaci\u00f3n web: diagrams</li> </ul> </li> </ol>"},{"location":"01_Intro/4_RepAlgoritmos.html#el-bloque-entrada-salida","title":"El bloque Entrada / Salida","text":"<p>En algunos algoritmos pedimos datos o sacamos datos por la pantalla, para ello utilizamos el bloque Entrada / Salida.</p> Bloque de Entrada / Salida <p>\u00bfPuedes describir el algoritmo que se representa en el diagrama de flujo  de abajo?</p> \u00bfQu\u00e9 describe este algoritmo? Actividad"},{"location":"01_Intro/4_RepAlgoritmos.html#aa15-diagrama-de-flujo","title":"\ud83d\udcdd AA1.5 Diagrama de flujo","text":"<p>(C.ESP2 / CE2.1 / IC1-3p)</p> <ol> <li>Realiza el diagrama de flujo correspondiente al algoritmo con los siguientes pasos:</li> </ol> <ul> <li>Te pregunta un n\u00famero entre 1 y 10</li> <li>Comprueba si est\u00e1 entre 1 y 10</li> <li>Te pregunta otro n\u00famero entre 1 y 10</li> <li>Comprueba si est\u00e1 entre 1 y 10</li> <li>Te da el resultado de sumas los dos n\u00fameros</li> </ul> <ol> <li>Crea un algoritmo donde uses dos veces un bloque de Entrada/Salida.</li> </ol> <ul> <li>Utiliza la siguiente aplicaci\u00f3n web:diagrams</li> </ul>"},{"location":"01_Intro/4_RepAlgoritmos.html#estructuras-de-repeticion","title":"Estructuras de repetici\u00f3n","text":"<p>A veces necesitamos repetir ciertas acciones varias veces por lo que existen estructuras de repetici\u00f3n o bucles:</p> <p>Las estructuras de repetici\u00f3n sirven para hacer algoritmos m\u00e1s cortos. Existen dos tipos:</p> <ul> <li> <p>Repetici\u00f3n para siempre</p> <p>Es el caso del primer ejemplo.</p> <ul> <li>La luz se est\u00e1 encendiendo y apagando indefinidamente.</li> <li>Este tipo de estructura no tiene bloque de FIN.</li> </ul> </li> <li> <p>Repetici\u00f3n un n\u00famero de veces</p> <p>Es el segundo ejemplo.</p> <ul> <li>La luz parpadea 10 veces cada segundo y luego el algoritmo termina.</li> </ul> </li> </ul> Bloque de repetici\u00f3n Actividad  V\u00eddeo resumen sobre el concepto de algoritmo"},{"location":"01_Intro/4_RepAlgoritmos.html#aa16-diagrama-de-flujo","title":"\ud83d\udcdd AA1.6 Diagrama de flujo","text":"<p>(C.ESP2 / CE2.1 / IC1-3p)</p> <ol> <li> <p>Realiza el diagrama de flujo correspondiente al algoritmo con los siguientes pasos:</p> <ul> <li>Manda a un robot subir 20 escalones.</li> <li>Primero tiene que subir la pierna derecha y luego la pierna izquierda.</li> <li>Cuando llegue al \u00faltimo escal\u00f3n, el robot tiene que detenerse.</li> </ul> </li> <li> <p>Crea un algoritmo donde uses dos veces un bloque repetido.</p> </li> </ol> <ul> <li>Utiliza la siguiente aplicaci\u00f3n web: https://app.diagrams.net/ </li> </ul>"},{"location":"01_Intro/5_Lenguajes.html","title":"Lenguajes de programaci\u00f3n","text":"<p>Hasta ahora hemos visto como crear algoritmos con frases en nuestro lenguaje, pero como dijimos al principio, el lenguaje que entienden los ordenadores y los robots no es el mismo que el nuestro.</p> <p>El lenguaje que utilizan los equipos para comunicarse entre s\u00ed se denomina lenguaje m\u00e1quina. Este lenguaje consiste en una serie de ceros y unos (datos binarios) que no es comprensible para las personas. Es lo que se denomina lenguaje de bajo nivel.</p> <p>Cuando una persona escribe un programa, lo hace en un lenguaje de alto nivel, que es comprensible para la misma, pero que tiene que ser transformado en c\u00f3digo m\u00e1quina para que el ordenador pueda interpretarlo.</p> <p>El compilador o int\u00e9rprete es el encargado de traducir a c\u00f3digo m\u00e1quina las \u00f3rdenes que escriben las personas.</p>"},{"location":"01_Intro/5_Lenguajes.html#tipos-de-lenguaje-de-programacion","title":"Tipos de lenguaje de programaci\u00f3n","text":"<p>Hay muchos lenguajes de alto nivel, unos destinados a un tipo de programas y otros m\u00e1s generales.\u00a0</p> <p>Existen lenguajes de programaci\u00f3n de tipo texto (Los m\u00e1s usados hoy en d\u00eda son Java, Python y C++) y lenguajes de programaci\u00f3n visuales (Tambi\u00e9n llamados lenguajes gr\u00e1ficos o lenguajes pro bloques).\u00a0</p> Lenguajes de programaci\u00f3n <p>En el siguiente tema vamos a estudiar un lenguaje visual muy utilizado en el \u00e1mbito educativo llamado Scratch. </p> Entorno programaci\u00f3n Python vs Entorno programaci\u00f3n Scratch Actividad <p>En el siguiente v\u00eddeo de Youtube podemos ver un resumen del tema:\u00a0</p>  V\u00eddeo resumen sobre el tema Actividad Reto 1Reto 2Reto 3Reto 4Reto 5 <p>Carla posee un rat\u00f3n, llamado XC4, que ha sido entrenado para seguir un comportamiento basado en reglas. Asistes a un experimento donde el rat\u00f3n est\u00e1 situado a la entrada de un sistema de ca\u00f1er\u00edas y el objetivo es que llegue al queso que se encuentra al final de la quinta ca\u00f1er\u00eda.</p> <p>Las instrucciones que siempre sigue XC4 son: </p> <ol> <li>Bajar por el tubo hasta que aparezca un t\u00fanel nuevo. </li> <li>Cada vez que te encuentres con un t\u00fanel nuevo, debes atravesarlo. </li> <li>Volver a la instrucci\u00f3n 1.</li> </ol> <p> Reto 1 </p> <p> </p> <p> </p> <p> Reto 4 </p> <p> </p> Soluciones Reto 1Reto 2Reto 3Reto 4Reto 5 <p> </p> <p> </p> <p> </p> <p> </p> <p> </p>"},{"location":"01_Intro/5_Lenguajes.html#aa17-diagrama-de-flujo","title":"\ud83d\udcdd AA1.7 Diagrama de flujo","text":"<p>(C.ESP2 / CE2.1 / IC1-3p)</p> <ol> <li>\u00bfQu\u00e9 diferencia hay entre un lenguaje de bajo nivel y un lenguaje de alto nivel?</li> <li>\u00bfQu\u00e9 es un compilador?</li> <li>Enumera 5 lenguajes de alto nivel.</li> </ol>"},{"location":"01_Intro/5_Lenguajes.html#aa18-competicion-de-retos-para-solucionar-con-algoritmos","title":"\ud83d\udcdd AA1.8 Competici\u00f3n de retos para solucionar con algoritmos","text":"<p>(C.ESP2 / CE2.1 / IC1-3p)</p> <p>Ahora que conocemos los algoritmos y para qu\u00e9 sirven, vamos a realizar una competici\u00f3n de retos para solucionar con algoritmos.</p> <p>Estas son las reglas de la competici\u00f3n:</p> <ul> <li>Cuando el profesor lo indique realiza cada uno de los  5 retos de algoritmos que se proponen.</li> <li>Cuando termines cada uno de los retos, ind\u00edcaselo al profesro para que anote tu posici\u00f3n en la competici\u00f3n.</li> <li>Luego veremos las soluciones de cada uno de los retos.</li> <li>Ganar\u00e1 la competici\u00f3n quien m\u00e1s retos haya resuelto correctemten en menos tiempo.</li> </ul>"},{"location":"01_Intro/5_Lenguajes.html#programacion-por-bloques-con-run-marco","title":"Programaci\u00f3n por bloques con Run Marco","text":"<p>Ahora vamos a jugar con Run Marco para practicar nuestra primera programaci\u00f3n por bloques.</p> <ol> <li>Debes seleccionar un personaje Marco o Sophia.</li> </ol> Elecci\u00f3n de un personaje <ol> <li>A continuaci\u00f3n, selecciona un escenario. Comenzamos con la jungla</li> </ol> Elecci\u00f3n escenario <ol> <li>Debemos conseguir que nuestro personaje ande hacia delante.</li> </ol> Objetivo andar hacia delante <ol> <li>Sigue las instrucciones para arrastrar los bloques de acciones y probarlos.</li> </ol> Seguir los pasos <ol> <li>Ahora te toca a ti  jugar!!!!</li> </ol>"},{"location":"02_Scratch/2_Scratch_I.html","title":"Introducci\u00f3n a la programaci\u00f3n en bloques.","text":""},{"location":"02_Scratch/2_Scratch_I.html#programacion-con-scratch-i","title":"Programaci\u00f3n con Scratch I","text":""},{"location":"02_Scratch/2_Scratch_I.html#primeros-pasos-con-scratch","title":"Primeros pasos con Scratch","text":"<p>Scratch es un entorno de programaci\u00f3n gr\u00e1fico y gratuito desarrollado por un grupo de investigadores del Instituto Tecnol\u00f3gico de Massachusetts (MIT) bajo la direcci\u00f3n del Dr. Mitchel Resnick.</p> <p>Fue dise\u00f1ado como medio de expresi\u00f3n para ayudar a los ni\u00f1os a expresar sus ideas de forma creativa, al mismo tiempo que desarrollan habilidades de pensamiento l\u00f3gico, creando juegos y animaciones que pueden compartirse.</p> <p>Podemos trabajar con una versi\u00f3n descargada e instalada en nuestro ordenador o bien con la versi\u00f3n on-line de la web http://scratch.mit.edu, que si nos registramos, nos permitir\u00e1 guardar en nuestro espacio virtual los proyectos que desarrollemos.</p> <p>Como el propio men\u00fa superior de la web indica, Scratch est\u00e1 pensado para crear, explorar, comentar, ayudar y buscar proyectos compartidos.</p> <p>La sintaxis de Scratch se basa en un conjunto de bloques gr\u00e1ficos de programaci\u00f3n que se ensamblan para crear programas.</p>"},{"location":"02_Scratch/2_Scratch_I.html#instalacion","title":"Instalaci\u00f3n","text":"<p>Scratch est\u00e1 instalado en los ordenadores del instituto . </p> <p>Sin embargo si quisieras usarlo desde casa, a continuaci\u00f3n te dejo los pasos para poder hacerlo:</p> <p>Al entrar por primera vez en la web de Scratch tenemos dos opciones: Empezar a crear, que nos permite entrar en Scratch sin registrarnos y \u00danete.</p> <p>Nosotros vamos a elegir la opci\u00f3n \u00danete, para poder guardar nuestros trabajos.</p> Unirse a scratcch <p>Despu\u00e9s, nos pedir\u00e1 nuestro nombre de usuario y una contrase\u00f1a y pulsamos Siguiente.</p> <p>Seleccionamos el idioma Spain y volvemos a pulsar Siguiente.</p> Configuraci\u00f3n nombre de usuario y una contrase\u00f1a. Elecci\u00f3n del pa\u00eds.  <p>Escribimos nuestra fecha de nacimiento, g\u00e9nero y correo electr\u00f3nico del instituto en sucesivas pantallas.</p> Configuraci\u00f3n edad y g\u00e9nero  <p>Un mensaje de bienvenida nos dice que nos hemos registrado correctamente. Pulsando en el bot\u00f3n Lee nuestas Normas de la comunidad, accedemos a una serie de normas y finalmente a nuestro Scratch.</p> <p>Comprobamos que estamos registrados mirando nuestro nombre de usuario en la esquina superior derecha y ya podemos empezar a programar pulsando el bot\u00f3n Crear.</p> Acceso a Scratch"},{"location":"02_Scratch/2_Scratch_I.html#pantalla-principal","title":"Pantalla principal","text":"<p>La pantalla que nos aparece tiene la siguiente forma y est\u00e1 formada por varias partes:</p> Pantalla de Scratch  V\u00eddeo de introducci\u00f3n a Scratch 3.0 (Pedro Ru\u00edz Fern\u00e1ndez)"},{"location":"02_Scratch/2_Scratch_I.html#movimientos","title":"Movimientos","text":"<p>Si seleccionamos la categor\u00eda Movimiento, nos aparecen los bloques de la misma; prueba a pulsar sobre cualquier bloque y ver\u00e1n c\u00f3mo se ejecuta dicho bloque. Si arrastramos el bloque a la zona de programa lo podemos ejecutar tambi\u00e9n pulsando sobre el mismo.</p> <p>Cuando queramos ejecutar m\u00e1s de un bloque a la vez, los tenemos que apilar o conectar en el orden correcto y tenemos que incluir al principio el bloque \"Al hacer clic en \u2690 \" de la categor\u00eda Eventos.</p>  Movimientos <p>En la categor\u00eda Movimiento tambi\u00e9n est\u00e1 la orden \"girar (...)grados\", que permite que el gato gire sobre su eje una cantidad de grados determinados.</p> <p>Tambi\u00e9n est\u00e1 la orden \"apuntar en direcci\u00f3n (...)\" que nos permite situar el gato en distintas posiciones.</p> <p>Adem\u00e1s, la orden \"ir a x:(...) y:(...)\" nos permite situar al gato en un punto concreto de la pantalla.</p> Actividad"},{"location":"02_Scratch/2_Scratch_I.html#aa21-dando-los-primeros-pasos-movimientos","title":"\ud83d\udcdd AA2.1 Dando los primeros pasos: Movimientos","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre Scratch y realiza las siguientes actividades escribiendo previamente los diagramas de flujo.</p> <ol> <li>Crea un programa en el que el gato avance 20 pasos cada vez que se pulse la bandera verde.</li> <li>Haz un programa en el que el gato gire 45 grados y luego avance 50 pasos cada vez que se pulse la bandera verde.</li> <li>Coloca el gato en la esquina superior izquierda y haz un programa para que ande hasta la esquina superior derecha, luego baje hasta la esquina inferior derecha, luego vaya hasta la esquina inferior izquierda y luego vuelva a la posici\u00f3n inicial. (Si lo haces bien, parece que el gato no se mueve).</li> </ol> <p>Entrega: Crear un documento llamado AA2.1_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/2_Scratch_I.html#dibujando-con-scratch","title":"Dibujando con Scratch","text":"<p>Podemos hacer que el personaje dibuje una l\u00ednea mientras se desplaza, para ello hay que pulsar el icono de a\u00f1adir extensi\u00f3n que se encuentra en la esquina inferior izquierda de la pantalla y elegir la extensi\u00f3n \"L\u00e1piz\".</p> <p>Al volver atr\u00e1s, vemos que se ha creado una nueva categor\u00eda llamada L\u00e1piz, con varios bloques verdes en su interior.</p> Dibujando con L\u00e1piz <p>Veamos para qu\u00e9 sirven algunos de esos bloques:</p> <p>Si ponemos el bloque \"bajar l\u00e1piz\" antes de mover, veremos que Scratch va dibujando una l\u00ednea mientras se mueve.</p> <p>Si queremos que el personaje deje de dibujar, hay que utilizar el bloque \"sube l\u00e1piz\".</p> <p>La orden \"sellar\" hace que el personaje se quede dibujado en el lugar en el que se encuentra.</p> <p>La orden \"borrar todo\" nos permite borrar todos los trazos hechos en la pantalla de Scratch; se suele incluir al principio de los programas para limpiar trazos de programas anteriores.</p>  Dibujando con L\u00e1piz"},{"location":"02_Scratch/2_Scratch_I.html#cambiando-las-caracteristicas-del-lapiz","title":"Cambiando las caracter\u00edsticas del l\u00e1piz","text":"<p>Dentro de la categor\u00eda L\u00e1piz existen una serie de \u00f3rdenes que permiten ajustar el grosor (\"fijar el tama\u00f1o de l\u00e1piz a 1\") y el color del l\u00e1piz (\"fijar color de l\u00e1piz a \") para dibujos con distintas l\u00edneas. En el siguiente ejemplo hemos dibujado un tri\u00e1ngulo equil\u00e1tero con lados de grosor 5 y de tres colores distintos.</p>  Cambiando caracter\u00edsticas del L\u00e1piz <p>Observa como en el ejemplo anterior se han empleado las \u00f3rdenes \"subir l\u00e1piz\", \"borrar\", \"ir a x:-120 y:80\" y \"apuntar en direcci\u00f3n 90\u00ba\" para que el programa siempre se inicie con la pantalla en blanco y con el gato situado en un punto concreto.</p> <p>Veamos el siguiente v\u00eddeo de Pedro Ru\u00edz Fern\u00e1ndez, donde se explica el uso del l\u00e1piz y se hace un peque\u00f1o programa para dibujar pol\u00edgonos.</p> Actividad"},{"location":"02_Scratch/2_Scratch_I.html#aa22-dando-los-primeros-pasos-lapiz","title":"\ud83d\udcdd AA2.2 Dando los primeros pasos: L\u00e1piz","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre Scratch y realiza las siguientes actividades escribiendo previamente los diagramas de flujo.</p> <ol> <li>Crea un programa en el que el personaje avance 90 pasos dibujando una l\u00ednea en color rojo, de grosor 5, a continuaci\u00f3n debe girar 72 grados y repetir los pasos anteriores durante 5 veces (Sin utilizar estructuras de repetici\u00f3n).  \u00bfQu\u00e9 figura se ha obtenido?</li> <li>Crea un programa en el que el personaje dibuje un rect\u00e1ngulo de 200 pasos de ancho y 100 pasos de alto.</li> <li>Crea un programa que dibujo un patr\u00f3n parecido al siguiente:  Imagen de referencia </li> </ol> <p>Entrega: Crear un documento llamado AA2.2_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/2_Scratch_I.html#estructuras-repetitivas","title":"Estructuras repetitivas","text":"<p>En los ejercicios anteriores hemos tenido que repetir varios bloques para conseguir dibujos con partes repetidas, como el tri\u00e1ngulo o las l\u00edneas discontinuas.</p> <p>Dentro de la categor\u00eda Control existen estructuras que permiten repetir los bloques que introduzcamos dentro: el bloque llamado \"repetir (,,,)\" y el bloque llamado \"por siempre\".</p> <p>En los siguientes ejemplos se ha empleado el bloque de repetici\u00f3n \"repetir (4)\" para dibujar un cuadrado sin definir lado por lado y en el segundo ejemplo, se ha utilizado el bloque de repetici\u00f3n \"por siempre\" para no tener que estar moviendo continuamente al personaje. (Si no has quitado el l\u00e1piz, se hace un dibujo muy chulo).</p> Estructuras repetitivas <p>Otras estructuras repetitivas son: \"repetir hasta que (...)\", que repite hasta que pasa \"algo\", como pulsar una tecla, chocar contra el borde, etc. y el bloque \"esperar hasta que (,...)\", que espera hasta que pasa \"algo\". Programas muy utilizados en juegos con movimiento.</p> <p>En los siguientes ejemplos podemos observar el funcionamiento de dichos bloques:</p> Estructuras repetitivas Actividad"},{"location":"02_Scratch/2_Scratch_I.html#aa23-dando-los-primeros-pasos-estructuras-de-control","title":"\ud83d\udcdd AA2.3 Dando los primeros pasos: Estructuras de control","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre Scratch y realiza las siguientes actividades escribiendo previamente los diagramas de flujo.</p> <ol> <li>Crea un programa que dibuje un oct\u00f3gono de color azul. En el programa solamente puedes utilizar una vez las siguientes instrucciones.  Mover y girar </li> <li> <p>Dibuja una estrella multicolor de 36 puntas. Para ello, debes dibujar 36 veces un lado de longitud 120 y girar 170 grados para dibujar el siguiente.</p> <ul> <li>A\u00f1ade el siguiente bloque para cambiar de color:      Cambiar color  </li> </ul> </li> <li> <p>Dibuja una estrella de 12 puntas multicolor, que tenga 12 lados de longitud 110 y girar\u00e1 150 grados en cada trazo.</p> </li> <li> <p>Crea un programa en el que el personaje gire 15 grados cada vez que se pulse la tecla g. (Para conseguirlo, utiliza el siguiente bloque)</p> <p>  Bloque presionar tecla </p> <p> Imagen referencia </p> </li> </ol> <p>Entrega: Crear un documento llamado AA2.3_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/2_Scratch_I.html#sonidos-con-scratch","title":"Sonidos con Scratch","text":"<p>Veamos el siguiente v\u00eddeo para comprender c\u00f3mo a\u00f1adir sonidos a nuestro proyecto de Scratch:</p> <p>Tambi\u00e9n podemos hacer m\u00fasica con instrumentos a trav\u00e9s de la extensi\u00f3n \"M\u00fasica\".</p> <p>Veamos c\u00f3mo se hace en el siguiente v\u00eddeo:</p> <p>Por \u00faltimo, podemos hacer que nuestros personajes hablen con la extensi\u00f3n \"Texto a voz\" de Scratch.</p> <p>Veamos c\u00f3mo se hace en el siguiente v\u00eddeo:</p> Actividad Actividad"},{"location":"02_Scratch/2_Scratch_I.html#aa24-dando-los-primeros-pasos-sonido","title":"\ud83d\udcdd AA2.4 Dando los primeros pasos: Sonido","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre Scratch y realiza las siguientes actividades escribiendo previamente los diagramas de flujo.</p> <ol> <li>Crea un programa en el que el gato \"cat\" nos cuente un chiste. Utiliza la extensi\u00f3n texto a voz y el bocadillo al mismo tiempo.</li> <li>Crea un programa en el que el gato dibuje un rect\u00e1ngulo en pantalla, cada vez que llegue a una esquina, tiene que decir alguna palabra tanto con voz, como con un bocadillo.</li> </ol> <p>Entrega: Crear un documento llamado AA2.4_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/2_Scratch_I.html#aa25-animar-un-nombre","title":"\ud83d\udcdd AA2.5 Animar un nombre","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre el siguiente ejercicio</p> <p>Entrega: Crear un documento llamado AA2.5_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/2_Scratch_I.html#operadores-y-estructuras-selectivas","title":"Operadores y estructuras selectivas","text":"<p>Dentro de la categor\u00eda Operadores existen las operaciones matem\u00e1ticas b\u00e1sicas +, -, *, /, n\u00fameros aleatorios y otras funciones para unir palabras.</p> <p>Las estructuras selectivas se utilizan para tomar decisiones y hacer una cosa u otra dependiendo de si se cumple una condici\u00f3n o no.</p> <p>Las condiciones b\u00e1sicas son \"Si...\" y \"Si... , sino...\" y est\u00e1n dentro de la categor\u00eda Control (color naranja) Veamos unos ejemplos para aclarar su uso:</p> Estructuras selectivas <p>El operador \"modulo\" nos da el resto de una divisi\u00f3n, por lo tanto podremos identificar los n\u00famero pares si dividimos por 2 y el resto es cero.</p> <p>Tambi\u00e9n existen operadores para realizar operaciones con letras y palabras.</p> Estructuras selectivas <p>Para obtener un n\u00famero al azar o \"aleatorio\" entre dos cantidades, se utiliza el siguiente bloque</p> Estructuras selectivas Actividad"},{"location":"02_Scratch/2_Scratch_I.html#aa26-dando-los-primeros-pasos-estructuras-selectivas","title":"\ud83d\udcdd AA2.6 Dando los primeros pasos: Estructuras Selectivas","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre Scratch y realiza las siguientes actividades escribiendo previamente los diagramas de flujo.</p> <ol> <li> <p>Prueba los cuatro programas vistos anteriormente.</p> </li> <li> <p>Crea un programa en el que te pregunte un n\u00famero y luego te diga un n\u00famero al azar entre 0 y el que tu has dicho.</p> </li> <li> <p>Crea un programa que pregunte un n\u00famero y  diga si es m\u00faltiplo de 10.</p> </li> <li> <p>Con el programa de la derecha, se puede dibujar un c\u00edrculo (realmente es un pol\u00edgono de 72 lados). Amplia el programa para que dibuje 10 c\u00edrculos de distintos colores en posiciones de la pantalla al azar.</p> </li> </ol> <p> Imagen referencia </p> <p>Entrega: Crear un documento llamado AA2.5_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/2_Scratch_I.html#objetos-y-escenarios","title":"Objetos y escenarios","text":"<p>Scratch desarrolla historias en un escenario en el que se pueden incluir distintos personajes y objetos que pueden ser programados de forma individual.</p>"},{"location":"02_Scratch/2_Scratch_I.html#escenarios","title":"Escenarios","text":"<p>El escenario es la zona donde se muestran los personajes y objetos, cada escenario lleva asociados sus propios fondos, sonidos y programas:</p> <ul> <li>Fondos: Son los escenarios de nuestros programas, pueden ser incluidos de la biblioteca de Scratch, subidos desde el ordenador o capturados desde una c\u00e1mara web. Los fondos pueden ser cambiados durante el programa.</li> <li>Sonidos: Cada escenario tiene unos sonidos asociados que pueden obtenerse en la biblioteca de Scratch o pueden subirse desde el ordenador o grabarse a trav\u00e9s del micr\u00f3fono.</li> <li>C\u00f3digo: Son los bloques de instrucci\u00f3n que definen el comportamiento del fondo: cambiar de fondo, crear efectos, a\u00f1adir sonidos, etc.</li> </ul> <p>En el siguiente ejemplo se han incluido dos nuevos fondos llamados \"castle1\" y \"castle2\" de la biblioteca; mediante el siguiente programa se puede cambiar el fondo al pulsar las teclas 1 y 2.</p> Objetos y escenarios"},{"location":"02_Scratch/2_Scratch_I.html#objetos","title":"Objetos","text":"<p>Los objetos son los personajes que podemos utilizar en nuestros programas de Scratch, al igual que los fondos, podremos elegirlos de la biblioteca, dibujarlos en el mismo programa, cargarlos desde el ordenador o desde una c\u00e1mara web.</p> <p>Y al igual que los escenarios, cada objeto lleva asociados sus propios disfraces, sonidos y programas:</p> <ul> <li>Disfraces: Los disfraces son las distintas formas que puede adoptar un objeto, de esta forma podemos simular un personaje que anda, vuela o se mueve.</li> <li>Sonidos: En la biblioteca existen sonidos para cada personaje que pueden utilizarse durante el programa del objeto.</li> <li>C\u00f3digo: Son los bloques que definen el comportamiento de cada personaje. Cada personaje tiene su propia \u00e1rea de programas. Para hacer que se ejecuten todos los programas, hay que pulsar la bandera verde que hay encima de la ventana de ejecuci\u00f3n.</li> </ul> <p>En el siguiente ejemplo se ha realizado un programa para cada personaje, si presionamos la bandera de cada personaje, solo se mover\u00e1 ese personaje, pero si presionamos la bandera verde de la ventana de ejecuci\u00f3n, podremos ver c\u00f3mo se mueven ambos personajes.</p> Ejemplo Actividad"},{"location":"02_Scratch/2_Scratch_I.html#aa27-dando-los-primeros-pasos-objetos-y-escenarios","title":"\ud83d\udcdd AA2.7 Dando los primeros pasos: Objetos y escenarios","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p) Abre Scratch y realiza las siguientes actividades escribiendo previamente los diagramas de flujo.</p> <ol> <li> <p>Elige un personaje que tenga varios disfraces (por ejemplo el tibur\u00f3n) y un escenario adecuado. Haz que se mueva por el escenario.</p> </li> <li> <p>Crea una historia en el que dos personajes conversen entre s\u00ed, puedes sincronizar los di\u00e1logos utilizando el siguiente bloque que hace que un personaje espere un tiempo determinado.  Esperar </p> </li> <li> <p>Simula un personaje que pasa de una zona a otra de un juego, por ejemplo elige dos fondos de la categor\u00eda \"ciudad\"  y haz que el personaje se mueva hacia la derecha. Cuando toque el borde, cambia el fondo y haz que el personaje aparezca a la izquierda.</p> </li> </ol> <p>Entrega: Crear un documento llamado AA2.6_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/2_Scratch_I.html#animaciones","title":"Animaciones","text":"<p>Una animaci\u00f3n consiste en crear la sensaci\u00f3n de que el personaje se mueve, cambiando disfraz alternativamente, por eso la mayor\u00eda de los personajes de Scratch disponen de varios disfraces que podemos ver y editar en la pesta\u00f1a disfraces.</p> Animaciones"},{"location":"02_Scratch/2_Scratch_I.html#tamano-del-personaje","title":"Tama\u00f1o del personaje","text":"<p>En ocasiones tambi\u00e9n podemos conseguir la animaci\u00f3n de un personaje cambiando su tama\u00f1o, as\u00ed podemos crear el efecto de que el mismo se aleja o se acerca a nosotros.</p> Tama\u00f1o del personaje"},{"location":"02_Scratch/2_Scratch_I.html#efectos-en-el-personaje","title":"Efectos en el personaje","text":"<p>Dentro de la categor\u00eda \"Apariencia\" se encuentra el bloque \"cambiar efecto\", que nos permite hacer cambios en el aspecto del personaje, como cambiar su color, verlo a vista de ojo de pez, pixelarlo, desvanecerlo, hacerlo m\u00e1s brillante, aplicarle un remolino, etc.</p> Efectos en el personaje Actividad Actividad Actividad Actividad Actividad Actividad Actividad Actividad Actividad Actividad refuerzo  Actividad refuerzo  Actividad Profundizaci\u00f3n Actividad Refuerzo"},{"location":"02_Scratch/2_Scratch_I.html#aa28-dando-los-primeros-pasos-animaciones","title":"\ud83d\udcdd AA2.8 Dando los primeros pasos: Animaciones","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre Scratch y realiza las siguientes actividades escribiendo previamente los diagramas de flujo.</p> <ol> <li> <p>Utiliza el gato para dibujar una l\u00ednea de 180 pasos. Tras cada paso cambiar\u00e1 de disfraz y esperar\u00e1 un segundo. Cuando termine, tu personaje deber\u00e1 pensar \"Esto es f\u00e1cil\" durante tres segundos.</p> </li> <li> <p>Crea un programa en el que aparezca un personaje que se acerque y se aleje al caminar, cambiando de disfraz con cada paso.</p> </li> <li> <p>Aplica una deformaci\u00f3n de ojo de pez a tu personaje. Debes aplicar el efecto de 10 en 10, repetirlo 50 veces y hacer una pausa de 0.1 segundo entre una repetici\u00f3n y la siguiente.</p> </li> </ol> <p>Entrega: Crear un documento llamado AA2.7_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/2_Scratch_I.html#aa29-animar-a-un-personaje","title":"\ud83d\udcdd AA2.9 Animar a un personaje","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre el siguiente ejercicio</p> <p>Entrega: Crear un documento llamado AA2.9_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/2_Scratch_I.html#aa210-juego-de-perseguir","title":"\ud83d\udcdd AA2.10 Juego de perseguir","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre el siguiente ejercicio</p> <p>Entrega: Crear un documento llamado AA2.10_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/2_Scratch_I.html#aa211-tarjetas-de-musica","title":"\ud83d\udcdd AA2.11 Tarjetas de m\u00fasica","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre el siguiente ejercicio</p> <p>Entrega: Crear un documento llamado AA2.11_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/2_Scratch_I.html#aa212-crear-una-historia","title":"\ud83d\udcdd AA2.12 Crear una historia","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre el siguiente ejercicio</p> <p>Entrega: Crear un documento llamado AA2.12_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/2_Scratch_I.html#aa213-ejercicio-libre","title":"\ud83d\udcdd AA2.13 Ejercicio libre","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Crea tu propio programa libre en Scratch utilizando todos los elementos aprendido hasta el momento.</p>"},{"location":"02_Scratch/2_Scratch_I.html#aa214-bailar","title":"\ud83d\udcdd AA2.14 Bailar","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre el siguiente ejercicio</p> <p>Entrega: Crear un documento llamado AA2.14_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/2_Scratch_I.html#aa215-mascotas-virtuales","title":"\ud83d\udcdd AA2.15 Mascotas virtuales","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre el siguiente ejercicio</p> <p>Entrega: Crear un documento llamado AA2.15_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/2_Scratch_I.html#aa216-juego-de-captura-de-objetos","title":"\ud83d\udcdd AA2.16 Juego de captura de objetos","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre el siguiente ejercicio</p> <p>Entrega: Crear un documento llamado AA2.16_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/2_Scratch_I.html#aar216-me-presento-con-scratch","title":"\ud83d\udd28 AAR2.16  Me presento con Scratch","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC2-10p)</p> <p>En la parte de teor\u00eda de la unidad hemos visto que utilizamos los algoritmos para resolver problemas y que los codificamos en programas para que el ordenador pueda procesar las soluciones. En esta pr\u00e1ctica vamos a resolver un problema que se da con cada comienzo de curso: presentarte a tus compa\u00f1eros y profesores.</p> <ol> <li> <p>Ejercicio 1. An\u00e1lisis</p> <ul> <li>Para nuestra presentaci\u00f3n utilizaremos el objeto Starfish, de la categor\u00eda Animales, y el fondo beach malibu. Los encontrar\u00e1s en la biblioteca de objetos y la de fondos, respectivamente.</li> <li>En primer lugar, pensamos cuatro aspectos que definan a nuestro objeto: su nombre y edad, su color favorito, sus gustos y aficiones o su m\u00fasica preferida.</li> <li>Decidimos que nuestro objeto Starfish se llama Balubita, que tiene 150 a\u00f1os, que su color favorito es el azul y que su m\u00fasica preferida es el hip-hop.</li> </ul> <p> </p> </li> <li> <p>Ejercicio 2. Dise\u00f1o</p> <ul> <li> <p>Ahora toca dise\u00f1ar c\u00f3mo llevar a cabo la presentaci\u00f3n. \u00bfEl proyecto se desarrollar\u00e1 secuencialmente? \u00bfSe deber\u00e1 repetir alguna instrucci\u00f3n? \u00bfSer\u00e1 necesario que se cumpla alguna condici\u00f3n para que se activen movimiento, m\u00fasica o efectos sonoros? \u00bfSe mover\u00e1 el personaje?</p> </li> <li> <p>Balubita, para presentarse, quiere decir su nombre, edad y color favorito de forma secuencial. Adem\u00e1s, quiere que, al decir su color, ella misma cambie de color y se vuelva azul. Y quiere moverse por la playa. Asimismo, a continuaci\u00f3n, Balubita pedir\u00e1 que hagamos clic en ella para que suene su m\u00fasica preferida.</p> </li> </ul> </li> <li> <p>Ejercicio 3. Diagrama de flujo</p> <ul> <li>Debajo puedes ver el diagrama de flujo que indica el orden de las instrucciones. Corresponde a un algoritmo que combina las estructuras secuencial y selectiva.</li> </ul> <p> </p> </li> <li> <p>Ejercicio 4. Programar en Scratch</p> <ul> <li> <p>Ahora codificaremos la presentaci\u00f3n en el lenguaje de programaci\u00f3n Scratch, siguiendo el diagrama de flujo.</p> </li> <li> <p>Entra en Scratch y haz clic en Crear. </p> </li> <li>Inicia un nuevo proyecto yendo a Archivo / Nuevo. Ll\u00e1malo PT2.8_Tu_nombre.</li> <li>Selecciona el personaje y el fondo indicados. Elimina el personaje Objeto1 que viene por defecto.</li> <li>Comienza la codificaci\u00f3n con la instrucci\u00f3n al hacer clic en bandera verde y ve incluyendo cada una de las instrucciones necesarias.</li> <li>Utiliza la instrucci\u00f3n decir ... durante ... segundos, de la categor\u00eda Apariencia, para incluir cada uno de los mensajes. Elige una duraci\u00f3n de 2 segundos en cada mensaje.</li> <li>Para cambiar el color, a\u00f1ade la instrucci\u00f3n dar al efecto color el valor ... y escribe 150 para que el personaje quede de color azul.</li> <li>Anida despu\u00e9s la instrucci\u00f3n deslizar en 1 segs a x: 150 y: -50, de la categor\u00eda Movimiento.</li> </ul> <p> </p> <ul> <li>Incluye en otro programa, por separado, la instrucci\u00f3n al hacer clic en este objeto, de la categor\u00eda Eventos.</li> <li>Anida en esta instrucci\u00f3n la orden iniciar sonido..., de la categor\u00eda Sonido, y selecciona Hip Hop (este sonido se incluye en la biblioteca de sonidos de Scratch). Para encontrar este sonido, o cualquier otro de la biblioteca, te puede ser \u00fatil acceder a la pesta\u00f1a Sonidos y escribir su nombre en el buscador.</li> </ul> <p> </p> </li> <li> <p>Ejercicio 5. Mejorar la presentaci\u00f3n</p> <ul> <li> <p>Puedes mejorar el programa anterior si te fijas en el diagrama de flujo. Como puedes observar, la parte final incluye la condici\u00f3n de que el sonido suene s\u00f3lo si hacemos clic en el personaje.</p> </li> <li> <p>Elimina el programa que se ejecuta al hacer clic en el objeto.</p> </li> <li>En el programa que no has borrado, anida la orden esperar hasta que..., de la categor\u00eda Control, e incluye en ella la instrucci\u00f3n \u00bftocando puntero del rat\u00f3n?, de la categor\u00eda Sensores. As\u00ed indicamos al personaje que debe esperar hasta que lo toquemos haciendo clic con el puntero del rat\u00f3n.</li> <li>Anida ahora la instrucci\u00f3n si..., entonces, de la categor\u00eda Control, e incluye en ella la instrucci\u00f3n \u00bftocando puntero del rat\u00f3n?, de la categor\u00eda Sensores.</li> <li>Por \u00faltimo, anida en el bucle si..., entonces la instrucci\u00f3n iniciar sonido Hip Hop, de la categor\u00eda Sonido.</li> <li>Comprueba el resultado haciendo clic en la bandera verde.</li> </ul> <p> </p> <ul> <li>Observa que el personaje se queda en la posici\u00f3n x = 150, y = \u221250 y de color azul. Para evitar esto y hacer que el programa comience con el personaje en su posici\u00f3n y condiciones iniciales, se incluyen habitualmente al comienzo del programa las condiciones de partida. Para ello, a\u00f1ade debajo de la instrucci\u00f3n al hacer clic en bandera verde las instrucciones quitar efectos gr\u00e1ficos, de la categor\u00eda Apariencia, e ir a x: -200 y: -50, de la categor\u00eda Movimiento. As\u00ed, el personaje se situar\u00e1 en esas coordenadas y se mostrar\u00e1 de su color original cada vez que reiniciemos el programa.</li> </ul> <p> </p> <ul> <li> <p>Prueba el programa.  </p> </li> <li> <p>Guardar en tu ordenador y seleccionando la carpeta en que guardas tus trabajos.</p> </li> <li>Modifica el programa para que la presentaci\u00f3n se ajuste a ti mismo. Puedes incluir tu propia foto como personaje, y como fondo, un lugar en el que te guste estar. Guarda el proyecto como guarda el proyecto como PT2.8_presentacion.sb3 en tu ordenador yendo a Archivo.</li> </ul> </li> </ol>"},{"location":"02_Scratch/2_Scratch_I.html#aar217-completa","title":"\ud83d\udd28 AAR2.17  Completa","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC2-10p)</p> <p>Completa el siguiente grupo de actividades</p> <p>Aqu\u00ed tienes las soluciones para autocorregirte.</p>"},{"location":"02_Scratch/2_Scratch_I.html#apt218-poligonos-de-colores-subalgoritmos-en-scratch","title":"\ud83d\udca1 APT2.18  Pol\u00edgonos de colores. Subalgoritmos en Scratch","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC2-10p)</p> <p>En ocasiones, para facilitar la evaluaci\u00f3n del software y evitar que los programas sean demasiado largos utilizamos subalgoritmos o procedimientos, que son peque\u00f1os programas a los que llama un programa principal para su ejecuci\u00f3n.</p> <ol> <li> <p>Ejercicio 1. Dibujar un pol\u00edgono en Scratch</p> <ul> <li>Inicia un nuevo proyecto yendo a Archivo / Nuevo. Ll\u00e1malo APT2.11_nombreapellido.</li> <li>Haz clic en A\u00f1adir extensi\u00f3n y elige L\u00e1piz.</li> <li>Copia el programa de la figura de abajo para el personaje que aparece por defecto.</li> </ul> <p> </p> <ul> <li>Prueba el programa con distintos n\u00fameros de lados.</li> </ul> </li> <li> <p>Ejercicio 2. Crear un subalgoritmo</p> <ul> <li>Vamos a modificar el programa anterior para crear un subalgoritmo que se pueda utilizar desde el programa principal.</li> <li>Accede al men\u00fa Mis bloques y haz clic en Crear un bloque. Escribe como nombre dibujar pol\u00edgonos.</li> </ul> <p> </p> <ul> <li>Comprueba que ha aparecido en tu espacio de programaci\u00f3n un bloque nuevo, definir dibujar pol\u00edgonos, similar a los bloques de inicio del men\u00fa Eventos. Anida debajo de dicho bloque todo el programa anterior, excepto la instrucci\u00f3n al hacer clic en bandera verde.</li> </ul> <p> </p> <ul> <li>Debajo del bloque al hacer clic en bandera verde (que ha quedado en el \u00e1rea de c\u00f3digo), anida las instrucciones decir Vamos a dibujar pol\u00edgonos por 2 segundos, de la categor\u00eda Apariencia, y dibujar pol\u00edgonos, de la categor\u00eda Mis bloques.</li> <li>En tu \u00e1rea de c\u00f3digo has de tener un programa que comienza con la instrucci\u00f3n al hacer clic en bandera verde  y un subalgoritmo o procedimiento de ese programa que comienza con la instrucci\u00f3n definir dibujar pol\u00edgonos.  </li> <li>Prueba el proyecto haciendo clic en la bandera verde.</li> <li>Descarga el proyecto en tu ordenador yendo a Archivo / Guardar en tu ordenador.</li> </ul> </li> <li> <p>Ejercicio 3. Subalgoritmos con par\u00e1metros</p> <ul> <li> <p>En Scratch, los procedimientos pueden incluir diferentes par\u00e1metros que permiten el intercambio de datos entre el programa principal y el subalgoritmo. Los par\u00e1metros pueden ser de tres tipos: un n\u00famero o texto, una expresi\u00f3n booleana o una etiqueta.</p> </li> <li> <p>En este caso, vamos a crear un subalgoritmo con tres par\u00e1metros de tipo num\u00e9rico.</p> </li> <li> <p>Inicia un nuevo proyecto yendo a Archivo / Nuevo. Ll\u00e1malo UD01_P12_2_nombreapellido.</p> </li> <li>Accede al men\u00fa Mis bloques y crea un bloque llamado dibujar pol\u00edgono. A\u00f1ade en \u00e9l dos par\u00e1metros de tipo n\u00famero llamados color y lados (figura 54).</li> <li>Para el personaje, copia el procedimiento de la figura:</li> </ul> <p> </p> <ul> <li>Copia ahora el programa principal siguiente:</li> </ul> <p> </p> </li> <li> <p>Ejercicio 4. Prueba el proyecto que has realizado</p> <ul> <li>Prueba el programa haciendo clic en la bandera verde. Haz clic en cualquier parte del escenario para ver los pol\u00edgonos que se van dibujando.</li> <li>Descarga el proyecto en tu ordenador yendo a Archivo / Guardar en tu ordenador.</li> </ul> </li> </ol>"},{"location":"02_Scratch/2_Scratch_I.html#aar219-cuadernillo","title":"\ud83d\udd28 AAR2.19  Cuadernillo","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC2-10p)</p> <ul> <li>Cuadernillo Scratch I</li> </ul> <p></p>"},{"location":"02_Scratch/3_Scratch_II.html","title":"Introducci\u00f3n Documentos XML","text":""},{"location":"02_Scratch/3_Scratch_II.html#programacion-con-scratch-ii","title":"Programaci\u00f3n con Scratch II","text":""},{"location":"02_Scratch/3_Scratch_II.html#variables","title":"Variables","text":"<p>A veces necesitamos guardar un dato a lo largo de un programa, como la puntuaci\u00f3n de un juego; en estos casos, Scratch dispone dentro de la categor\u00eda Variables de unos bloques que nos permiten crear variables a las que damos un nombre y que guardan datos durante el programa.</p> Variables <p>En el siguiente ejemplo se han usado dos datos \" Respuesta1\" y \"Respuesta2\" para guardar los dos n\u00fameros que nos preguntan.</p> <p>Solo aparecen los bloques naranjas cuando creamos al menos una variable.</p> Ejemplo se han usado dos datos \" Respuesta1\" y \"Respuesta2\" <p>Los datos pueden ir cambiando durante la ejecuci\u00f3n del programa, como en el siguiente ejemplo, en el que hemos creado una variable llamada lado cuyo valor inicial es 10, pero que se incrementa en 5 con cada paso del bucle, para ir incrementando el lado de la espiral cuadrada.</p> Ejemplo"},{"location":"02_Scratch/3_Scratch_II.html#listas","title":"Listas","text":"<p>Dentro de la categor\u00eda Variables se encuentra el bot\u00f3n Crear lista, que nos permite introducir una lista de datos que nos servir\u00e1 para seleccionarlos desde un programa.</p> <p>Al crear una lista, nos aparecen los bloques que nos permite insertar, seleccionar o eliminar elementos de la lista.</p> <p>Comprueba el funcionamiento de las listas ejecutando el siguiente programa (Introduce los nombres de los compa\u00f1eros de clase).</p> Listas  Actividad"},{"location":"02_Scratch/3_Scratch_II.html#aa221-dando-los-primeros-pasos-listas","title":"\ud83d\udcdd  AA2.21 Dando los primeros pasos: Listas","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre Scratch y realiza las siguientes actividades escribiendo previamente los diagramas de flujo.</p> <ol> <li> <p>Prueba los dos ejemplos vistos antes.</p> </li> <li> <p>Crea un programa en el que el gato te pregunte tu nombre y luego tu apellido y despu\u00e9s te diga \"Te llamas ...\", donde junte tu nombre y apellido.</p> </li> <li> <p>Crea un programa en el que introduzcas los nombres de todos los compa\u00f1eros de la clase. Luego Scratch tiene que decir los nombres de todos, uno por uno.</p> </li> </ol>"},{"location":"02_Scratch/3_Scratch_II.html#analisis-y-validacion-de-software","title":"An\u00e1lisis y validaci\u00f3n de software","text":"<p>A lo largo del desarrollo de un programa inform\u00e1tico es necesario realizar evaluaciones de su funcionalidad y verificar su adecuaci\u00f3n como soluci\u00f3n al problema planteado.</p> <p>No todos los programas son igual de importantes, ni tampoco los fallos que puedan detectarse en ellos son de la misma relevancia. As\u00ed, por ejemplo, un programa inform\u00e1tico que controle el proceso de producci\u00f3n de una vacuna o uno que monitorice a un paciente en un hospital son programas considerados cr\u00edticos y deben ser sometidos a estrictos controles y procesos de verificaci\u00f3n y validaci\u00f3n antes de su puesta en funcionamiento.</p> <p>Los procesos de verificaci\u00f3n son llevados a cabo por los desarrolladores del programa y determinan la calidad del software a lo largo de todo su proceso de desarrollo. Con ellos se busca la detecci\u00f3n y correcci\u00f3n temprana de posibles errores, lo cual permite evitar costes derivados de fallos del sistema.</p> <p>Los procesos de validaci\u00f3n determinan si el programa final cumple los requerimientos planteados por el cliente, incluyen pruebas de resultados y valoran la integraci\u00f3n del software con el hardware en el que se implementar\u00e1.</p> <p>Ambos procesos garantizan la calidad del software creado.</p> <p>El m\u00e9todo m\u00e1s sencillo de evaluaci\u00f3n del software es mediante la realizaci\u00f3n de trazas lo que supone la ejecuci\u00f3n manual del programa para la detecci\u00f3n de errores.</p> Traza de una aplicaci\u00f3n  Analizadores online <p>Para Scratch, existe una herramienta online, llamada Dr. Scratch, con la que puedes evaluar tus programas (http://drscratch.org). Puedes subir uno que tengas descargado en tu ordenador o enlazar el que tengas abierto en la web de Scratch. Esta herramienta muestra la valoraci\u00f3n del programa en relaci\u00f3n con diversos aspectos del pensamiento computacional, como el pensamiento l\u00f3gico, el control de flujo o la abstracci\u00f3n, entre otros.</p> Actividad"},{"location":"02_Scratch/3_Scratch_II.html#aa222-analizando-juegos","title":"\ud83d\udcdd  AA2.22 Analizando juegos","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Juego 1: Intenta tocar el gato que se mueve aleatoriamente por toda la pantalla.  Juego 1  </p> <p>Juego 2: \u00bfPuedes adivinar el n\u00famero en el que est\u00e1 pensando la hechicera? (F\u00edjate c\u00f3mo hemos desactivado la variable \"n\u00famero secreto\" para que no se vea en pantalla).  Juego 2  </p>"},{"location":"02_Scratch/3_Scratch_II.html#funciones","title":"Funciones","text":"<p>Una funci\u00f3n es un conjunto de bloques que se encuentran dentro de un solo bloque al que le henos dado un nombre determinado. Al ejecutar dicho bloque, se ejecutan todos los bloques que se encuentran en su interior.</p> <p>Las funciones son  muy \u00fatiles cuando  elaboramos largos programas en los que hay trozos de c\u00f3digo que se repite varias veces.</p> <p>En Scratch podemos crear las funciones en la categor\u00eda Mis bloques.</p> <p>Mira el siguiente v\u00eddeo de Youtube en el que nos explica c\u00f3mo crear y utilizar un nuevo bloque.</p>  V\u00eddeo resumen crear y utilizar nuevos bloques <p>Prueba el siguiente c\u00f3digo donde se emplea una funci\u00f3n creando un nuevo bloque. \u00bfQu\u00e9 hace este programa?      \u00bfQu\u00e9 hace este programa?  </p> Actividad Actividad Actividad refuerzo"},{"location":"02_Scratch/3_Scratch_II.html#pt223-tu-primer-juego","title":"\ud83d\udcdd  PT2.23 Tu primer juego","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>A lo largo de la unidad hemos visto c\u00f3mo hacer que los personajes de Scratch se muevan, dibujen, cambien de aspecto, etc.</p> <p>Tambi\u00e9n hemos visto algunos juegos de ejemplo. </p> <p>Bas\u00e1ndote en esos juegos, construye un juego original y sencillo con los bloques que hemos visto a lo largo de la unidad.</p>"},{"location":"02_Scratch/3_Scratch_II.html#aa224-juego-del-laberinto","title":"\ud83d\udcdd AA2.24 Juego del laberinto","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC2-10p)</p> <p> </p> <p>Lo primero que vamos a hacer es construir el laberinto en nuestro Escenario. Para ello pintamos el fondo de un color (en este caso rosado) y luego lo que hacemos es colocar rect\u00e1ngulos azules que har\u00e1n las paredes del laberinto. La forma y ubicaci\u00f3n la eligen ustedes. Ahora vamos a crear un nuevo objeto que ser\u00e1 el Pacman. En este caso la alumna trabaj\u00f3 con dos disfraces para el personaje del Pacman, uno con la boca abierta y otro con la boca cerrada.</p> <p> </p> <p>En cuanto a su c\u00f3digo es un poco m\u00e1s elaborado que el que hemos realizado en ejercicos anteriores ejercicios, simplemente porque queremos que al caminar nuestro personaje vaya alternando los disfraces y porque nos interesa que cuando llegue al borde rebote. </p> <p> </p> <p>Adem\u00e1s vamos a incluir otro c\u00f3digo para que siempre comience en el mismo lugar de la pantalla y para que cuando se choque contra un bloque azul tenga que rebotar e ir para el otro lado.   </p> <p>Ahora vamos a trabajar con las frutas  </p> <p>Como ver\u00e1n su c\u00f3digo es similar, lo que cambia es la posici\u00f3n en la que se encuentran. Vamos a crear una variable objetos que lo que hace es contar la cantidad de objetos que hay en pantalla. Al inicio 2 . Cuando PacMan toca la fruta, la misma se esconde y la cantidad de objetos baja en 1. </p> <p>Ahora veremos que es lo que pasa con los fantasmas. Tendremos por un lado los rojos que se mover\u00e1n de forma horizontal y el azul que ir\u00e1 de manera vertical.  </p> <p>El segundo c\u00f3digo hace que si toca al PacMan entonces mande una se\u00f1al de GameOver. El fantasma azul tiene la variante de que apunta hacia arriba cuando inicia.</p> <p> </p> <p>Bueno, ahora lo \u00faltimo que nos falta es controlar cuando se gana y se pierde, por lo que como en otros juegos trabajremos con el escenario y sus disfraces.  </p> <p>El fondo 2 va a tener un cartel que diga \u201cGanaste\u201d y el fondo 3 un cartel que diga \u201cPerdiste\u201d ... El c\u00f3digo del escenario va a ser el siguiente  </p> <p>Y listo, \u00fanicamente queda jugar el juego. Si quiero que quede m\u00e1s complicado puedo agregar m\u00e1s fantasmas.</p> <p>Entrega: Crear un documento llamado AA2.24_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"02_Scratch/3_Scratch_II.html#aar225-mis-ahorros","title":"\ud83d\udd28 AAR2.25  Mis ahorros","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC2-10p)</p> <p>Uno de los problemas que a tu edad suelen aparecer es el de las finanzas. Ser\u00eda muy \u00fatil contar con una peque\u00f1a calculadora mensual que te indique cu\u00e1nto dinero te va quedando de tus ahorros, en funci\u00f3n de tus ingresos y gastos. En esta pr\u00e1ctica, vas a aprender a desarrollar los algoritmos necesarios para poder codificar en Scratch tu calculadora mensual.</p> <ol> <li> <p>Ejercicio 1. An\u00e1lisis</p> <ul> <li>El problema consiste en crear una calculadora que vaya restando los gastos que diariamente vayas introduciendo y sumando los ingresos que se produzcan. Adem\u00e1s, para evitar que te quedes sin dinero, te avisar\u00e1 cuando en la hucha haya 50 euros o menos. Cuando haya m\u00e1s de 50 euros, la calculadora te dar\u00e1 un mensaje de \u00e1nimo para que contin\u00faes ahorrando.</li> </ul> </li> <li> <p>Ejercicio 2. Dise\u00f1o</p> <ul> <li>Para poder realizar la calculadora, necesitas trabajar con variables. En este caso son necesarias tres variables: ingresos, gastos y contenido de la hucha.</li> <li>Utilizar\u00e1s algoritmos de estructura secuencial, selectiva e iterativa.</li> </ul> </li> <li> <p>Ejercicio 3. Diagrama de flujo</p> <ul> <li>Abajo puedes ver el diagrama de flujo que indica el orden de las instrucciones. Los algoritmos se repetir\u00e1n 30 veces, una por cada d\u00eda del mes (considerando meses de 30 d\u00edas).</li> </ul> <p> </p> </li> <li> <p>Ejercicio 4. Programar en Scratch</p> <ul> <li> <p>Codifica ahora la calculadora en el lenguaje de programaci\u00f3n Scratch, siguiendo el diagrama de flujo.</p> </li> <li> <p>Inicia un nuevo proyecto yendo a Archivo / Nuevo. Ll\u00e1malo AAR2.10_nombreapellido.</p> </li> <li>En primer lugar, debes definir las variables que vas a utilizar. Accede a la categor\u00eda Variables y haz clic en Crear una variable. Crea las variables contenido hucha, gastos e ingresos.</li> <li>Inicia ahora el programa con la instrucci\u00f3n al hacer clic en bandera verde.</li> <li>Fija el valor inicial de las variables. En este caso, sup\u00f3n que partes de un contenido en la hucha de 150 euros. Selecciona las instrucciones dar a contenido hucha el valor 150, dar a gastos el valor 0 y dar a ingresos el valor 0, de la categor\u00eda Variables.</li> <li>A partir de aqu\u00ed, todas las instrucciones se repetir\u00e1n durante los 30 d\u00edas de c\u00e1lculo. Para ello, utiliza una instrucci\u00f3n iterativa. Selecciona el bloque repetir 30, de la categor\u00eda Control.</li> <li>Anida a continuaci\u00f3n la instrucci\u00f3n preguntar \u00bfHas tenido ingresos? y esperar, de la categor\u00eda Sensores.</li> <li>Ante la pregunta planteada, es necesario incluir ahora un bloque de estructura selectiva. Anida un bucle si..., entonces / si no, de la categor\u00eda Control.</li> <li>La condici\u00f3n que hay que verificar es si la respuesta a la pregunta anterior es \u00abS\u00ed\u00bb o no lo es. Para ello utiliza un comparador de igualdad de la categor\u00eda Operadores, como puedes ver en la figura de abajo.</li> </ul> <p> </p> <ul> <li>Si la respuesta es \u201cS\u00ed\u201d, necesitas saber qu\u00e9 ingresos has tenido. Incluye a continuaci\u00f3n la instrucci\u00f3n preguntar \u00bfCu\u00e1nto? y esperar, de la categor\u00eda Sensores.</li> <li>Anida a continuaci\u00f3n la instrucci\u00f3n sumar a ingresos respuesta, de la categor\u00eda Variables. De esta manera, el valor de la variable ingresos aumentar\u00e1 en el valor que se introduzca como ingreso cada vez.</li> <li>Anida tambi\u00e9n la instrucci\u00f3n dar a contenido hucha el valor contenido hucha + respuesta, de la categor\u00eda Variables. Para codificar esta instrucci\u00f3n necesitas un operador de suma de la categor\u00eda Operadores y el valor de respuesta de la categor\u00eda Sensores. Observa la figura de abajo.</li> </ul> <p> </p> <ul> <li>Si la respuesta a la pregunta de si has tenido ingresos (punto 6) es \u201cNo\u201d, entonces es necesario saber si ha habido gastos. Para ello, en el bloque si..., entonces / si no, anida bajo la rama si no la instrucci\u00f3n preguntar \u00bfHas tenido gastos? y esperar, de la categor\u00eda Sensores.</li> <li>Anida a continuaci\u00f3n un bloque si..., entonces para verificar la respuesta, como has hecho en el punto 7, e incluye la instrucci\u00f3n preguntar \u00bfCu\u00e1nto? y esperar, de la categor\u00eda Sensores. Anida las instrucciones para modificar los valores de las variables gastos y contenido hucha. Los pasos son similares a los detallados en las instrucciones de los puntos 9 y 10. F\u00edjate en la figura de abajo.</li> </ul> <p> </p> <ul> <li>A continuaci\u00f3n, fuera del bloque si..., entonces / si no, incluye una instrucci\u00f3n para que el personaje te diga el contenido de la hucha. Usa para ello la instrucci\u00f3n decir, de la categor\u00eda Apariencia, junto con la instrucci\u00f3n unir, de la categor\u00eda Operadores. La instrucci\u00f3n debe quedar as\u00ed :</li> </ul> <p> </p> <ul> <li> <p>Finalmente, s\u00f3lo queda valorar si el contenido de la hucha es mayor que 50 euros o no. Utiliza para ello un nuevo bloque si..., entonces / si no y las instrucciones decir Vas bien durante 2 segundos y decir Hay que ahorrar durante 2 segundos, de la categor\u00eda Apariencia; la calculadora dir\u00e1 una cosa u otra en funci\u00f3n del contenido de la hucha.</p> </li> <li> <p>Prueba el programa. Descarga el proyecto en tu ordenador yendo a Archivo / Guardar en tu ordenador y seleccionando la carpeta en que guardas tus trabajos.</p> </li> <li> <p>Modifica el programa anterior para a\u00f1adir como condici\u00f3n nueva que, cuando el contenido de la hucha sea menor de 20, el programa muestre el mensaje \u201c\u00a1No despilfarres tanto!\u201d. Guarda el proyecto como AAR2.10_nombreapellido2.sb3.</p> </li> </ul> </li> </ol>"},{"location":"03_Scratch_2/2_Scratch_III.html","title":"Introducci\u00f3n a la programaci\u00f3n en bloques.","text":""},{"location":"03_Scratch_2/2_Scratch_III.html#proyectos-con-scratch-i","title":"Proyectos con Scratch I","text":""},{"location":"03_Scratch_2/2_Scratch_III.html#primer-juego","title":"Primer Juego","text":"<p>Vamos a dise\u00f1ar y programar desde cero nuestro primer juego. La programaci\u00f3n de cualquier juego o programa ha de hacerse por pasos: En primer lugar, pensar en el juego en s\u00ed, en su dise\u00f1o, en la forma de conseguir aumentar la puntuaci\u00f3n, en la dificultad, etc. Seguidamente, hay que plantear los diagramas de flujo y por \u00faltimo utilizaremos las instrucciones necesarias.\u00a0</p> <p>Durante el dise\u00f1o y programaci\u00f3n del juego, podemos cambiar aspectos del mismo, podemos a\u00f1adir elementos y debemos de ir haciendo pruebas en las distintas fases del mismo.</p> <p>El juego que vamos a programar es el juego de PONG, en el que una bola rebota contra los bordes y en el que tendremos que evitar que dicha bola toque el borde inferior mediante el movimiento de una pala.</p>"},{"location":"03_Scratch_2/2_Scratch_III.html#primer-paso-diseno","title":"Primer paso: Dise\u00f1o","text":"<p>A\u00f1adiremos los objetos y el escenario del juego, como en la siguiente pantalla.</p> Escenario del juego"},{"location":"03_Scratch_2/2_Scratch_III.html#segundo-paso-movimientos","title":"Segundo paso: Movimientos","text":"<p>Programa los objetos para que la bola est\u00e9 continuamente rebotando contra los bordes y la pala se pueda mover mediante el rat\u00f3n, como en la siguiente imagen:</p> <p>Para ello dise\u00f1amos el siguiente diagrama de flujo para la bola:</p> Diagrama de flujo <p>\u00bfSer\u00edas capaz de dise\u00f1ar el diagrama de flujo para la pala?</p> Traducimos el diagrama al lenguaje de programaci\u00f3n de Scratch. (Ver soluci\u00f3n \ud83d\udc49) <p> Diagrama de flujo pala </p>"},{"location":"03_Scratch_2/2_Scratch_III.html#tercer-paso-interaccion-entre-los-personajes-y-objetos","title":"Tercer paso: Interacci\u00f3n entre los personajes y objetos","text":"<p>Hay que programar la bola para que cuando toque la pala, cambie de direcci\u00f3n. Vamos a programar un bote aleatorio, para que el juego no sea repetitivo.</p> <p>Dise\u00f1a el diagrama de flujo correspondiente.</p> Traducimos el diagrama al lenguaje de programaci\u00f3n de Scratch. (Ver soluci\u00f3n \ud83d\udc49) <p> Diagrama de flujo </p>"},{"location":"03_Scratch_2/2_Scratch_III.html#cuarto-paso-ganar-o-perder","title":"Cuarto paso: ganar o perder","text":"<p>Cuando la bola rebote contra la pala, aumentar\u00e1 un punto la puntuaci\u00f3n (Previamente hay que crear una variable llamada \"Puntos\").</p> <p>Cuando la bola toque el borde inferior de la pantalla, el juego terminar\u00e1.</p> <p>Hay varias soluciones, pero la m\u00e1s sencilla de programar consiste en\u00a0 colocar un objeto llamado \"l\u00ednea\" en la parte baja de la pantalla.</p> <p>Dise\u00f1a el diagrama de flujo correspondiente.</p> Traducimos el diagrama al lenguaje de programaci\u00f3n de Scratch. (Ver soluci\u00f3n \ud83d\udc49) <p> Diagrama de flujo </p> Actividad"},{"location":"03_Scratch_2/2_Scratch_III.html#aa31-disenando-un-juego","title":"\ud83d\udcdd AA3.1 Dise\u00f1ando un juego","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre Scratch y realiza las siguientes actividades escribiendo previamente los diagramas de flujo.</p> <ol> <li> <p>Dise\u00f1a un juego en el que caigan objetos desde la parte de arriba de la pantalla y adem\u00e1s ...</p> <ul> <li>Incluye un personaje que intente capturar dichos objetos.\u00a0</li> <li>Con cada objeto que capture, aumentar\u00e1 la puntuaci\u00f3n del jugador.</li> <li>Si un objeto toca el fondo de la pantalla, se terminar\u00e1 el juego.</li> </ul> </li> </ol> <p>Ejemplo</p> <p>Entrega: Crear un documento llamado AA3.1_Tu_nombre donde pegar\u00e1s tu diagrama de flujo e imagen de scratch.</p>"},{"location":"03_Scratch_2/3_Scratch_VI.html","title":"Introducci\u00f3n a la programaci\u00f3n en bloques.","text":""},{"location":"03_Scratch_2/3_Scratch_VI.html#proyectos-con-scratch-ii","title":"Proyectos con Scratch II","text":""},{"location":"03_Scratch_2/3_Scratch_VI.html#segundo-juego","title":"Segundo Juego","text":"<p>Antes de proponer el segundo juego, vamos a ver c\u00f3mo podemos hacer que el fondo se mueva continuamente, dando el efecto de que un personaje se mueve.</p>"},{"location":"03_Scratch_2/3_Scratch_VI.html#primer-paso-diseno","title":"Primer paso: Dise\u00f1o","text":"<p>Los fondos no pueden moverse, as\u00ed que vamos a crear un objeto con el aspecto de fondo.</p> <p>Debemos elegir un fondo que tenga un aspecto horizontal, en Scratch existen varios que pueden servirnos.\u00a0</p> <p>Lo vamos a abrir como escenario y vamos a editarlo pulsando en \"Pinta\" y lo copiamos pulsando el icono \"Copiar\".</p> Escenario del juego <p>Luego creamos un nuevo objeto eligiendo la opci\u00f3n \"Pinta\" del men\u00fa de objetos y pegamos dos veces el fondo pegado en el editor de disfraces mediante el icono \"Pegar\".</p> <p>Intentamos que los dos fondos pegados coincidan exactamente para conseguir una continuidad del mismo.</p> Escenario del juego <p>Tenemos que conseguir que el fondo se desplace de derecha a izquierda y que cuando llegue al final, salte de nuevo al principio, consiguiendo de esta forma un fondo en movimiento continuo. El siguiente programa hace lo que buscamos:</p> Escenario del juego <p>Si ahora insertamos un personaje que parezca que camina al cambiar su disfraz, podemos conseguir un efecto muy realista.</p> <p>El bloque \"ir a capa [delantera]\" hace que el personaje se mantenga por encima del fondo.</p> Escenario del juego Actividad Actividad Actividad <p>En la web de Scratch hay multitud de juegos realizados por gente de todo el mundo, tan bien hechos como el siguiente:</p> Ejemplo juegos Actividad Juego"},{"location":"03_Scratch_2/3_Scratch_VI.html#aa32-disenando-un-juego","title":"\ud83d\udcdd AA3.2 Dise\u00f1ando un juego","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre Scratch y realiza las siguientes actividades escribiendo previamente los diagramas de flujo.</p> <ol> <li>Dise\u00f1a un juego paso a paso en el que una nave se mueva por el espacio de izquierda a derecha (En realidad es el fondo el que se tiene que mover) y vaya disparando a objetos que aparezcan aleatoriamente desde la derecha de la pantalla y se acerquen a la misma.</li> </ol> <ul> <li>Realiza el movimiento del fondo.</li> <li>Haz que la nave se pueda desplazar de arriba a abajo con el rat\u00f3n.</li> <li>Programa objetos que aparezcan por la parte derecha de la pantalla y se desplacen hacia la izquierda.</li> <li>La nave disparar\u00e1 hacia la derecha y podr\u00e1 destruir los objetos que aparecen, aumentando la cuenta de puntos.</li> <li>Si un objeto toca la nave, se termina el juego.</li> </ul> <p> Escenario del juego </p>"},{"location":"03_Scratch_2/3_Scratch_VI.html#aa33-actividad-por-parejas-tenis","title":"\ud83d\udcdd AA3.3 Actividad por parejas Tenis","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre Scratch y realiza las siguientes actividades escribiendo previamente los diagramas de flujo.</p> <p>1. Dise\u00f1a un juego paso a paso en el que pod\u00e1is jugar los dos a tenis. 2. Cada jugador tendr\u00e1 unas teclas para manejar su raqueta y un marcador. 3. Si la bola toca uno de los fondos, el jugador contrario ganar\u00e1 un punto. 4. Gana el jugador que consiga antes diez puntos. 5. Una vez terminado, comparte tu juego para que el profesor pueda evaluarlo. 6. Se puntuar\u00e1 la originalidad, el aspecto est\u00e9tico, la jugabilidad y la dificultad.</p> <p> Escenario del juego </p>"},{"location":"03_Scratch_2/3_Scratch_VI.html#aa34-actividad-por-parejas-loros","title":"\ud83d\udcdd AA3.4 Actividad por parejas Loros","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Abre Scratch y realiza el juego \"LOROS ASESINOS\" a partir de las siguientes im\u00e1genes.</p> <p>Realiza la programaci\u00f3n de uno de los loros y duplica el personaje, as\u00ed se duplicar\u00e1 tambi\u00e9n su c\u00f3digo.</p> <p>Reduce el tama\u00f1o de los loros a 50 y el tama\u00f1o de la mariposa a 70.</p> <p> Escenario del juego </p>"},{"location":"03_Scratch_2/3_Scratch_VI.html#aa35-actividad-por-pareja-creacion-de-un-videojuego","title":"\ud83d\udcdd AA3.5 Actividad por pareja. Creaci\u00f3n de un videojuego","text":"<p>(C.ESP2 / CE2.2, CE2.3, CE2.4 / IC1-3p)</p> <p>Ya que conoces los distintos aspectos de un videojuego, es hora de que realices el tuyo propio</p> <ul> <li> <p>Dise\u00f1a un juego paso a paso en el que haya movimiento e interacci\u00f3n entre personajes, movimientos, escenarios, interactividad, puntuaci\u00f3n, etc.</p> </li> <li> <p>Se puntuar\u00e1 la originalidad, el aspecto est\u00e9tico, la jugabilidad y la dificultad.</p> </li> </ul> <p>P\u00e1gina para aprender a programar con Scratch mediante retos:\u00a0 https://www.robotix.es/es/actividades-scratch</p>"}]}